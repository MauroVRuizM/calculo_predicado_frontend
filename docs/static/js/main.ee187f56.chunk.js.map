{"version":3,"sources":["types/types.js","store/store.js","reducers/ruleReducer.js","reducers/factReducer.js","reducers/checkReducer.js","actions/checks.js","components/Checks.jsx","actions/facts.js","components/Facts.jsx","components/FactsList.jsx","components/Navbar.jsx","actions/rules.js","components/Rules.jsx","components/RulesList.jsx","routers/AppRouter.jsx","App.js","index.js"],"names":["types","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","rule","state","action","type","success","payload","msg","rules","fact","facts","check","status","response","store","createStore","applyMiddleware","thunk","listCheck","Checks","speechRef","useRef","dispatch","useDispatch","useSelector","useEffect","Swal","fire","position","icon","title","showConfirmButton","timer","didClose","current","play","useSpeechRecognition","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","className","onClick","SpeechRecognition","startListening","stopListening","stop","message","clause","a","axios","post","JSON","stringify","headers","Accept","result","data","map","item","index","ref","text","toString","lang","voice","listFacts","addFact","Facts","useState","predicado","sujetos","setFacts","max","setMax","history","useHistory","push","addSubject","event","maxt","reduce","prev","length","id","parseInt","target","deleteSubject","splice","theader","scope","tbody","tdata","sujeto","index2","placeholder","value","onChange","e","item2","index3","aux","toLowerCase","toLocaleUpperCase","role","startAddFacts","FactsList","get","Navbar","to","listRules","addRule","Rules","conclusion","setConclusion","condiciones","setCondiciones","operadores","setOperadores","max2","setMax2","addCDSubject","deleteCDSubject","ccheader","cdheader","ccdata","cdbody","cddata","opdata","defaultValue","startAddRules","RulesList","cond","operador","AppRouter","exact","path","component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ee187f56.chunk.js","sourcesContent":["export const types = {\r\n    addRule: '[Rule] add',\r\n    listRule: '[Rule] list',\r\n    addFact: '[Fact] add',\r\n    listFact: '[Fact] list',\r\n    askCheck: '[Check] ask',\r\n    clearChek: '[Check] clear'\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { factReducer } from '../reducers/factReducer';\r\nimport { ruleReducer } from '../reducers/ruleReducer';\r\nimport { checkReducer } from '../reducers/checkReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    rule: ruleReducer,\r\n    fact: factReducer,\r\n    check: checkReducer\r\n});\r\n\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","import { types } from '../types/types';\r\n\r\nexport const ruleReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case types.addRule:\r\n            return {\r\n                success: action.payload.success,\r\n                msg: action.payload.msg\r\n            }\r\n        case types.listRule:\r\n            return {\r\n                rules: [...action.payload]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from '../types/types';\r\n\r\nexport const factReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case types.addFact:\r\n            return {\r\n                success: action.payload.success,\r\n                msg: action.payload.msg\r\n            }\r\n        case types.listFact:\r\n            return {\r\n                facts: [...action.payload]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from '../types/types';\r\n\r\nexport const checkReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case types.askCheck:\r\n            return {\r\n                status: action.payload.status,\r\n                response: [...action.payload.response]\r\n            }\r\n        case types.clearChek:\r\n            return {\r\n                response: ''\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import axios from 'axios';\r\nimport { types } from '../types/types';\r\n\r\nexport const startAskCheck = (clause) => {\r\n    return async(dispatch) => {\r\n        const result = await axios.post(\r\n            'https://us-central1-prolsimu.cloudfunctions.net/api/ia/checking', {\r\n                \"message\": JSON.stringify(clause),\r\n            }, {\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-type\": \"application/json\",\r\n                }\r\n            }\r\n        );\r\n        dispatch(listCheck(result.data.message, result.status));\r\n    }\r\n}\r\n\r\nexport const listCheck = (response, status) => {\r\n    return {\r\n        type: types.askCheck,\r\n        payload: {\r\n            status,\r\n            response\r\n        }\r\n    }\r\n}\r\n\r\nexport const clearCheck = () => {\r\n    return {\r\n        type: types.clearChek\r\n    }\r\n}","import React, { useEffect, useRef } from 'react';\r\nimport SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';\r\nimport Speech from 'react-speech';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { startAskCheck, clearCheck } from '../actions/checks';\r\n\r\nexport const Checks = () => {\r\n\r\n    const speechRef = useRef();\r\n    const dispatch = useDispatch();\r\n    const { check } = useSelector( state => state );\r\n    const { response, status } = check;\r\n\r\n\r\n    const handleAskCheck = () => {\r\n        if(transcript !== '') {\r\n            let message = `¿ ${transcript} ?`;\r\n            dispatch(startAskCheck(message));\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(status === 200) {\r\n            Swal.fire({\r\n                position: \"top-end\",\r\n                icon: \"success\",\r\n                title: \"Consulta Exitosa!\",\r\n                showConfirmButton: false,\r\n                timer: 2000,\r\n                didClose: () => { speechRef.current.play() }\r\n            })\r\n        }\r\n    }, [status, response])\r\n\r\n    const handleReset = () => {\r\n        resetTranscript();\r\n        dispatch(clearCheck());\r\n    }\r\n\r\n    const handleStop = () => {\r\n        SpeechRecognition.stopListening()\r\n        speechRef.current.stop();\r\n    }\r\n\r\n\r\n    const {\r\n        transcript,\r\n        listening,\r\n        resetTranscript,\r\n        browserSupportsSpeechRecognition\r\n    } = useSpeechRecognition();\r\n\r\n    if (!browserSupportsSpeechRecognition) {\r\n        return <span>Browser doesn't support speech recognition.</span>;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <div className=\"alert alert-dismissible alert-light\">\r\n                <h1>METAS</h1>\r\n            </div>\r\n            <p>Microphone: {listening ? 'on' : 'off'}</p>\r\n            <button \r\n                onClick={SpeechRecognition.startListening}\r\n                className=\"btn btn-outline-success\"\r\n            >Start</button>\r\n            <button \r\n                onClick={handleStop}\r\n                className=\"btn btn-outline-danger\"\r\n            >Stop</button>\r\n            <button \r\n                onClick={handleReset}\r\n                className=\"btn btn-outline-info\"\r\n            >Reset</button>\r\n            <button \r\n                onClick={handleAskCheck}\r\n                className=\"btn btn-outline-warning\"\r\n            >Consultar</button>\r\n            <br /> <br />\r\n            <h5>Pregunta</h5>\r\n            <p> <strong>{`¿ ${transcript} ?`}</strong> </p>\r\n            <br />\r\n            <h5>Respuesta</h5>\r\n                {\r\n                    !!response && response.map((item, index) => {\r\n                        return (\r\n                            <p key={index}>{item}</p>\r\n                        )\r\n                    })\r\n                }\r\n            <Speech\r\n                ref={speechRef}\r\n                text={ !!response && [...response].toString()}\r\n                lang=\"en-US\"\r\n                voice=\"Microsoft Sabina - Spanish (Mexico)\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import axios from 'axios';\r\nimport { types } from '../types/types';\r\n\r\nexport const startListFacts = () => {\r\n    return async(dispatch) => {\r\n        const result = await axios.get('https://us-central1-prolsimu.cloudfunctions.net/api/fact/all');\r\n        dispatch(listFacts(result.data.data));\r\n    }\r\n}\r\n\r\nexport const startAddFacts = (facts) => {\r\n    return async(dispatch) => {\r\n        const result = await axios.post(\r\n            'https://us-central1-prolsimu.cloudfunctions.net/api/fact/create',\r\n            JSON.stringify(facts), {\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-type\": \"application/json\",\r\n                }\r\n            }\r\n        );\r\n        dispatch(addFact(result.data.success, result.data.message));\r\n    }\r\n}\r\n\r\nexport const listFacts = (facts) => {\r\n    return {\r\n        type: types.listFact,\r\n        payload: facts\r\n    }\r\n}\r\n\r\nexport const addFact = (success, msg) => {\r\n    return {\r\n        type: types.addFact,\r\n        payload: {\r\n            success,\r\n            msg\r\n        }\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { startAddFacts } from '../actions/facts';\r\n\r\nexport const Facts = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { fact } = useSelector( state => state );\r\n    const [facts, setFacts] = useState([{ predicado: \"\", sujetos: [\"\"] }]);\r\n    const [max, setMax] = useState([\"\"]);\r\n    let history = useHistory();\r\n    const { success, msg } = fact;\r\n\r\n\r\n    if(success) {\r\n        Swal.fire({\r\n            position: \"top-end\",\r\n            icon: \"success\",\r\n            title: `${msg}`,\r\n            showConfirmButton: false,\r\n            timer: 2000,\r\n            didClose: () => {history.push('/list/facts')}\r\n        })\r\n    }\r\n\r\n\r\n\r\n    const handleAddFact = () => {\r\n        dispatch(startAddFacts(facts));\r\n    }\r\n\r\n    const addFact = () => {\r\n        setFacts([...facts, { predicado: \"\", sujetos: [\"\"] }]);\r\n    };\r\n\r\n    const addSubject = (event) => {\r\n        let maxt = facts.reduce(function (prev, current) {\r\n            return prev.sujetos.length > current.sujetos.length ? prev : current;\r\n        });\r\n        setMax([...maxt.sujetos, \"\"]);\r\n        const id = parseInt(event.target.id);\r\n        setFacts(\r\n            facts.map((item, index) => {\r\n                if (index === id) {\r\n                    return { ...item, sujetos: [...item.sujetos, \"\"] };\r\n                } else {\r\n                    return item;\r\n                }\r\n            })\r\n        );\r\n    };\r\n\r\n    const deleteSubject = (event) => {\r\n        const id = parseInt(event.target.id);\r\n        setFacts(\r\n            facts.map((item, index) => {\r\n                if (index === id) {\r\n                    return { ...item, sujetos: item.sujetos.splice(-1, 1) };\r\n                } else {\r\n                    return item;\r\n                }\r\n            })\r\n        );\r\n    };\r\n\r\n    // --------- CABECERA DINAMICA DE LA TABLA -------------------------------\r\n\r\n    const theader = max.map((index) => {\r\n        return (\r\n        <th scope=\"col\" className=\"ps-3\">\r\n            {`SUJETO ${index + 1}`}\r\n        </th>\r\n        );\r\n    });\r\n\r\n     // --------- CUERPO DINAMICO DE LA TABLA -------------------------------\r\n\r\n    const tbody = facts.map((item, index) => {\r\n        const tdata = item.sujetos.map((sujeto, index2) => {\r\n        return (\r\n            <td>\r\n            <input\r\n                className=\"form-control form-control-lg text-lowercase\"\r\n                type=\"text\"\r\n                placeholder=\"Sujeto\"\r\n                value={sujeto}\r\n                onChange={(e) => {\r\n                setFacts(\r\n                    facts.map((item2, index3) => {\r\n                    if (index3 === index) {\r\n                        let aux = item.sujetos;\r\n                        aux[index2] = e.target.value.toLowerCase();\r\n                        return { ...item2, sujetos: aux };\r\n                    } else {\r\n                        return item2;\r\n                    }\r\n                    })\r\n                );\r\n                }}\r\n            />\r\n            </td>\r\n        );\r\n        });\r\n\r\n        return (\r\n        <tr>\r\n            <td>\r\n            <div className=\"form-group\">\r\n                <input\r\n                className=\"form-control form-control-lg text-uppercase\"\r\n                type=\"text\"\r\n                placeholder=\"Predicado\"\r\n                value={item.predicado}\r\n                onChange={(e) =>\r\n                    setFacts(\r\n                    facts.map((item2, index2) => {\r\n                        if (index2 === index) {\r\n                        return { ...item2, predicado: e.target.value.toLocaleUpperCase() };\r\n                        } else {\r\n                        return item2;\r\n                        }\r\n                    })\r\n                    )\r\n                }\r\n                />\r\n            </div>\r\n            </td>\r\n            {tdata}\r\n            <td>\r\n            <div className=\"btn-group p-2\" role=\"group\">\r\n                <span\r\n                type=\"button\"\r\n                className=\"badge bg-success fs-3 py-0 px-3\"\r\n                id={index}\r\n                onClick={addSubject}\r\n                >\r\n                +\r\n                </span>\r\n                <span\r\n                type=\"button\"\r\n                className=\"badge bg-dark ms-1 fs-3 py-0 px-3\"\r\n                id={index}\r\n                onClick={deleteSubject}\r\n                >\r\n                -\r\n                </span>\r\n            </div>\r\n            </td>\r\n        </tr>\r\n        );\r\n    });\r\n\r\n    //----------------------------------------------------------------------------\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <div className=\"alert alert-dismissible alert-light\">\r\n                <h1>BASE DE HECHOS</h1>\r\n            </div>\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-info ms-2 mb-3\"\r\n                onClick={addFact}\r\n            >\r\n                <i className=\"fas fa-plus-circle me-2\"></i>\r\n                Hecho\r\n            </button>\r\n            <table className=\"table\">\r\n                <thead>\r\n                <tr className=\"table-dark\">\r\n                    <th scope=\"col\" className=\"ps-3\">\r\n                    PREDICADO\r\n                    </th>\r\n                    {theader}\r\n                </tr>\r\n                </thead>\r\n                <tbody>{tbody}</tbody>\r\n            </table>\r\n            <button\r\n            type=\"button\"\r\n            className=\"btn btn-outline-info\"\r\n            onClick={handleAddFact}\r\n        >\r\n            <i className=\"fas fa-file-export me-2\"></i>\r\n            Guardar\r\n        </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\n\r\nimport { startListFacts } from '../actions/facts';\r\n\r\nexport const FactsList = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { fact } = useSelector( state => state );\r\n\r\n    const facts = fact.facts;\r\n\r\n    useEffect(() => {\r\n        dispatch(startListFacts());\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <div className=\"alert alert-dismissible alert-light\">\r\n                <h1>LISTA DE HECHOS</h1>\r\n            </div>\r\n            <table className=\"table table-hover\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">HECHOS</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {!!facts && facts.map((item) => {\r\n                        return (\r\n                            <tr className=\"table-primary\">\r\n                                <td>\r\n                                {item.predicado +\r\n                                    \"(\" +\r\n                                    item.sujetos.map((sujeto, index) => {\r\n                                    if (index === 0 && item.sujetos.length > 1) {\r\n                                        return `${sujeto}`;\r\n                                    }\r\n                                    if (index === item.sujetos.length - 1) {\r\n                                        return `${sujeto})`;\r\n                                    }\r\n                                    })}\r\n                                </td>\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n            <div className=\"container\">\r\n                <Link className=\"navbar-brand\" to=\"/facts\">\r\n                    Cálculo de Predicado\r\n                </Link>\r\n                <button\r\n                    className=\"navbar-toggler\"\r\n                    type=\"button\"\r\n                    data-bs-toggle=\"collapse\"\r\n                    data-bs-target=\"#navbarColor02\"\r\n                    aria-controls=\"navbarColor02\"\r\n                    aria-expanded=\"false\"\r\n                    aria-label=\"Toggle navigation\"\r\n                >\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarColor02\">\r\n                    <ul className=\"navbar-nav ms-auto\">\r\n                        <li className=\"nav-item dropdown\">\r\n                            <h6\r\n                                className=\"nav-link dropdown-toggle\"\r\n                                data-bs-toggle=\"dropdown\"\r\n                                role=\"button\"\r\n                                aria-haspopup=\"true\"\r\n                                aria-expanded=\"false\"\r\n                            >\r\n                                INGRESAR\r\n                            </h6>\r\n                            <div className=\"dropdown-menu\">\r\n                                <Link className=\"dropdown-item\" to=\"/facts\">\r\n                                    HECHOS\r\n                                </Link>\r\n                                <Link className=\"dropdown-item\" to=\"/rules\">\r\n                                    CONOCIMIENTOS\r\n                                </Link>\r\n                            </div>\r\n                        </li>\r\n                        <li className=\"nav-item dropdown\">\r\n                            <h6\r\n                                className=\"nav-link dropdown-toggle\"\r\n                                data-bs-toggle=\"dropdown\"\r\n                                role=\"button\"\r\n                                aria-haspopup=\"true\"\r\n                                aria-expanded=\"false\"\r\n                            >\r\n                                CONSULTAR\r\n                            </h6>\r\n                            <div className=\"dropdown-menu\">\r\n                                <Link className=\"dropdown-item\" to=\"/list/facts\">\r\n                                    LISTA DE HECHOS\r\n                                </Link>\r\n                                <Link className=\"dropdown-item\" to=\"/list/rules\">\r\n                                    LISTA DE CONOCIMIENTOS\r\n                                </Link>\r\n                                <Link className=\"dropdown-item\" to=\"/checks\">\r\n                                    METAS\r\n                                </Link>\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n","import axios from 'axios';\r\nimport { types } from '../types/types';\r\n\r\nexport const startListRules = () => {\r\n    return async(dispatch) => {\r\n        const result = await axios.get('https://us-central1-prolsimu.cloudfunctions.net/api/rule/all');\r\n        dispatch(listRules(result.data.data));\r\n    }\r\n}\r\n\r\nexport const startAddRules = (rule) => {\r\n    return async(dispatch) => {\r\n        const result = await axios.post(\r\n            'https://us-central1-prolsimu.cloudfunctions.net/api/rule/create',\r\n            JSON.stringify(rule), {\r\n                headers: {\r\n                    Accept: \"application/json\",\r\n                    \"Content-type\": \"application/json\",\r\n                }\r\n            }\r\n        );\r\n        dispatch(addRule(result.data.success, result.data.message));\r\n    }\r\n}\r\n\r\nexport const listRules = (rules) => {\r\n    return {\r\n        type: types.listRule,\r\n        payload: rules\r\n    }\r\n}\r\n\r\nexport const addRule = (success, msg) => {\r\n    return {\r\n        type: types.addRule,\r\n        payload: {\r\n            success,\r\n            msg\r\n        }\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport { startAddRules } from '../actions/rules';\r\n\r\nexport const Rules = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { rule } = useSelector( state => state );\r\n    const { success, msg } = rule;\r\n    const [conclusion, setConclusion] = useState({\r\n        predicado: \"\",\r\n        sujetos: [\"\"],\r\n    });\r\n    const [condiciones, setCondiciones] = useState([\r\n        { predicado: \"\", sujetos: [\"\"] },\r\n    ]);\r\n    const [operadores, setOperadores] = useState([]);\r\n    const [max, setMax] = useState([\"\"]);\r\n    const [max2, setMax2] = useState([\"\"]);\r\n    let history = useHistory();\r\n\r\n    if(success) {\r\n        Swal.fire({\r\n            position: \"top-end\",\r\n            icon: \"success\",\r\n            title: `${msg}`,\r\n            showConfirmButton: false,\r\n            timer: 2000,\r\n            didClose: () => {history.push('/list/rules')}\r\n        })\r\n    }\r\n\r\n    const handleaddRule = () => {\r\n        let myRule = {\r\n            id: \"\",\r\n            conclusion: conclusion,\r\n            condiciones: condiciones,\r\n            operadores: operadores,\r\n        };\r\n        dispatch(startAddRules(myRule));\r\n    }\r\n\r\n\r\n    const addCondicion = () => {\r\n        setCondiciones([...condiciones, { predicado: \"\", sujetos: [\"\"] }]);\r\n        setOperadores([...operadores, \"AND\"]);\r\n    };\r\n\r\n    const addCDSubject = (event) => {\r\n        let maxt = condiciones.reduce(function (prev, current) {\r\n            return prev.sujetos.length > current.sujetos.length ? prev : current;\r\n        });\r\n        setMax([...maxt.sujetos, \"\"]);\r\n        const id = parseInt(event.target.id);\r\n        setCondiciones(\r\n            condiciones.map((item, index) => {\r\n                if (index === id) {\r\n                    return { ...item, sujetos: [...item.sujetos, \"\"] };\r\n                } else {\r\n                    return item;\r\n                }\r\n            })\r\n        );\r\n    };\r\n\r\n    const addCCSubject = () => {\r\n        setMax2([...conclusion.sujetos, \"\"]);\r\n        setConclusion({ ...conclusion, sujetos: [...conclusion.sujetos, \"\"] });\r\n    };\r\n\r\n    const deleteCDSubject = (event) => {\r\n        const id = parseInt(event.target.id);\r\n        setCondiciones(\r\n            condiciones.map((item, index) => {\r\n                if (index === id) {\r\n                    return { ...item, sujetos: item.sujetos.splice(-1, 1) };\r\n                } else {\r\n                    return item;\r\n                }\r\n            })\r\n        );\r\n    };\r\n\r\n    const deleteCCSubject = () => {\r\n        setConclusion({ ...conclusion, sujetos: conclusion.sujetos.splice(-1, 1) });\r\n    };\r\n\r\n    //----------------Cabeceras dinamicas-------------------\r\n\r\n    const ccheader = max2.map((index) => {\r\n        return (\r\n            <th key={index} scope=\"col\" className=\"ps-3\">\r\n                {`VARIABLE ${index + 1}`}\r\n            </th>\r\n        );\r\n    });\r\n\r\n    const cdheader = max.map((index) => {\r\n        return (\r\n            <th key={index} scope=\"col\" className=\"ps-3\">\r\n                {`VARIABLE ${index + 1}`}\r\n            </th>\r\n        );\r\n    });\r\n\r\n\r\n    //-----------Cuerpos dinamicos-------------------------\r\n\r\n    const ccdata = conclusion.sujetos.map((sujeto, index) => {\r\n        return (\r\n            <td>\r\n                <input\r\n                    key={index}\r\n                    className=\"form-control form-control-lg text-uppercase\"\r\n                    type=\"text\"\r\n                    placeholder=\"Variable\"\r\n                    value={sujeto}\r\n                    onChange={(e) => {\r\n                        let aux = conclusion.sujetos;\r\n                        aux[index] = e.target.value.toLocaleUpperCase();\r\n                        setConclusion({ ...conclusion, sujetos: aux });\r\n                    }}\r\n                />\r\n            </td>\r\n        );\r\n    });\r\n\r\n    const cdbody = condiciones.map((item, index) => {\r\n        const cddata = item.sujetos.map((sujeto, index2) => {\r\n            return (\r\n                <td>\r\n                    <input\r\n                        key={index2}\r\n                        className=\"form-control form-control-lg text-uppercase\"\r\n                        type=\"text\"\r\n                        placeholder=\"Variable\"\r\n                        value={sujeto}\r\n                        onChange={(e) => {\r\n                        setCondiciones(\r\n                            condiciones.map((item2, index3) => {\r\n                            if (index3 === index) {\r\n                                let aux = item.sujetos;\r\n                                aux[index2] = e.target.value.toLocaleUpperCase();\r\n                                return { ...item2, sujetos: aux };\r\n                            } else {\r\n                                return item2;\r\n                            }\r\n                            })\r\n                        );\r\n                        }}\r\n                    />\r\n                </td>\r\n            );\r\n        });\r\n        return (\r\n            <tr>\r\n                <td>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            className=\"form-control form-control-lg text-uppercase\"\r\n                            type=\"text\"\r\n                            placeholder=\"Predicado\"\r\n                            value={item.predicado}\r\n                            onChange={(e) =>\r\n                                setCondiciones(\r\n                                condiciones.map((item2, index2) => {\r\n                                    if (index2 === index) {\r\n                                    return { ...item2, predicado: e.target.value.toLocaleUpperCase() };\r\n                                    } else {\r\n                                    return item2;\r\n                                    }\r\n                                })\r\n                                )\r\n                            }\r\n                        />\r\n                    </div>\r\n                </td>\r\n                {cddata}\r\n                <td>\r\n                    <div className=\"btn-group p-2\" role=\"group\">\r\n                        <span\r\n                            type=\"button\"\r\n                            className=\"badge bg-success fs-3 py-0 px-3\"\r\n                            id={index}\r\n                            onClick={addCDSubject}\r\n                        >\r\n                        +\r\n                        </span>\r\n                        <span\r\n                            type=\"button\"\r\n                            className=\"badge bg-dark ms-1 fs-3 py-0 px-3\"\r\n                            id={index}\r\n                            onClick={deleteCDSubject}\r\n                            >\r\n                            -\r\n                            </span>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        );\r\n    });\r\n\r\n    //-------------------------------------------------------------------------\r\n\r\n    const opdata = operadores.map((item, index) => {\r\n        return (\r\n            <select\r\n                className=\"form-select col me-3\"\r\n                key={index}\r\n                id={index}\r\n                defaultValue={\"AND\"}\r\n                onChange={(e) =>\r\n                setOperadores(\r\n                    operadores.map((item2, index2) => {\r\n                    if (index2 === index) {\r\n                        return e.target.value;\r\n                    } else {\r\n                        return item2;\r\n                    }\r\n                    })\r\n                )}\r\n            >\r\n                <option value=\"AND\">AND</option>\r\n                <option value=\"OR\">OR</option>\r\n                <option value=\"THEN\">THEN</option>\r\n            </select>\r\n        );\r\n    });\r\n\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <div className=\"alert alert-dismissible alert-light\">\r\n                <h1>BASE DE CONOCIMIENTOS</h1>\r\n            </div>\r\n            <h2>CONCLUSIÓN</h2>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr className=\"table-dark\">\r\n                        <th scope=\"col\" className=\"ps-3\">\r\n                            PREDICADO\r\n                        </th>\r\n                        {ccheader}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                <tr>\r\n                    <td>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                className=\"form-control form-control-lg text-uppercase\"\r\n                                type=\"text\"\r\n                                placeholder=\"Predicado\"\r\n                                value={conclusion.predicado}\r\n                                onChange={(e) =>\r\n                                    setConclusion({ ...conclusion, predicado: e.target.value.toLocaleUpperCase() })\r\n                                }\r\n                            />\r\n                        </div>\r\n                    </td>\r\n                    {ccdata}\r\n                    <td>\r\n                        <div className=\"btn-group p-2\" role=\"group\">\r\n                            <span\r\n                                type=\"button\"\r\n                                className=\"badge bg-success fs-3 py-0 px-3\"\r\n                                onClick={addCCSubject}\r\n                            >\r\n                            +\r\n                            </span>\r\n                            <span\r\n                                type=\"button\"\r\n                                className=\"badge bg-dark ms-1 fs-3 py-0 px-3\"\r\n                                onClick={deleteCCSubject}\r\n                            >\r\n                            -\r\n                            </span>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n                </tbody>\r\n            </table>\r\n            <h2>CONDICIONES</h2>\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-info mb-3 me-2\"\r\n                onClick={addCondicion}\r\n            >\r\n                <i className=\"fas fa-plus-circle me-2\"></i>\r\n                Condición\r\n            </button>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr className=\"table-dark\">\r\n                        <th scope=\"col\" className=\"ps-3\">\r\n                            PREDICADO\r\n                        </th>\r\n                        {cdheader}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>{cdbody}</tbody>\r\n            </table>\r\n            <h2>OPERADORES</h2>\r\n            <div className=\"form-group row my-3\">\r\n                {opdata}\r\n                <div className=\"col-6\"></div>\r\n            </div>\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-info mb-2\"\r\n                onClick={handleaddRule}\r\n            >\r\n                <i className=\"fas fa-file-export me-2\"></i>\r\n                Guardar\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\n\r\nimport { startListRules } from '../actions/rules';\r\n\r\nexport const RulesList = () => {\r\n\r\n        const dispatch = useDispatch();\r\n\r\n        const { rule } = useSelector( state => state );\r\n\r\n        const rules = rule.rules;\r\n\r\n        useEffect(() => {\r\n            dispatch(startListRules());\r\n        }, [dispatch]);\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <div className=\"alert alert-dismissible alert-light\">\r\n                <h1>LISTA DE CONOCIMIENTOS</h1>\r\n            </div>\r\n            <table className=\"table table-hover\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">CONOCIMIENTOS</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                    !!rules && rules.map((item) => {\r\n                        // console.log(item);\r\n                        return (\r\n                            <tr className=\"table-primary\">\r\n                                <td>\r\n                                {\r\n                                    //condiciones\r\n                                    \"SI {\" +\r\n                                    item.condiciones.map((cond, index2) => {\r\n                                    let operador = \"\";\r\n                                    if (index2 > 0) {\r\n                                        operador = item.operadores[index2 - 1];\r\n                                    }\r\n                                    return (\r\n                                        operador +\r\n                                        \" \" +\r\n                                        cond.predicado +\r\n                                        \"(\" +\r\n                                        cond.sujetos.map((sujeto, index) => {\r\n                                        if (index === 0 && cond.sujetos.length > 1) {\r\n                                            return `${sujeto}`;\r\n                                        }\r\n                                        if (index === cond.sujetos.length - 1) {\r\n                                            return `${sujeto})`;\r\n                                        }\r\n                                        })\r\n                                    );\r\n                                    }) +\r\n                                    //conclusion\r\n                                    \"} ENTONCES {\" +\r\n                                    item.conclusion.predicado +\r\n                                    \"(\" +\r\n                                    item.conclusion.sujetos.map((sujeto, index) => {\r\n                                    if (index === 0 && item.conclusion.sujetos.length > 1) {\r\n                                        return `${sujeto}`;\r\n                                    }\r\n                                    if (index === item.conclusion.sujetos.length - 1) {\r\n                                        return `${sujeto})`;\r\n                                    }\r\n                                    }) +\r\n                                    \"}\"\r\n                                }\r\n                            </td>\r\n                            </tr>\r\n                        );\r\n                    })\r\n                }\r\n            </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport { Checks } from '../components/Checks';\r\nimport { Facts } from '../components/Facts';\r\nimport { FactsList } from '../components/FactsList';\r\nimport { Navbar } from '../components/Navbar';\r\nimport { Rules } from '../components/Rules';\r\nimport { RulesList } from '../components/RulesList';\r\n\r\nexport const AppRouter = () => {\r\n    return (\r\n        <Router>\r\n            <Navbar/>\r\n            <div>\r\n                <Switch>\r\n                    <Route exact path=\"/facts\" component={ Facts } />\r\n                    <Route path=\"/rules\" component={ Rules } />\r\n                    <Route path=\"/list/rules\" component={ RulesList } />\r\n                    <Route path=\"/list/facts\" component={ FactsList } />\r\n                    <Route path=\"/checks\" component={ Checks } />\r\n                    <Redirect to=\"/facts\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store/store';\nimport { AppRouter } from './routers/AppRouter';\n\nexport const App = () => {\n  return (\n    <Provider store={ store }>\n      <AppRouter/>\n    </Provider>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render( <\n    App / > ,\n    document.getElementById('root')\n);"],"sourceRoot":""}